name: CI / Build

on:
- push
- pull_request

jobs:
  CI:
    name: CI
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Version
      id: version
      run: |
        CALVER="$(date -u +%Y.%-m.%-d).${GITHUB_RUN_NUMBER}"
        TAGS="${CALVER}"
        echo ::set-output name=tags::${TAGS}
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven Wrapper
      run: |
        ./mvnw -DnewVersion="${{ steps.version.outputs.tags }}" -DgenerateBackupPoms=false --batch-mode versions:set
        ./mvnw -B package
    - name: Save artifact
      uses: actions/upload-artifact@v2
      with: 
        name: build
        path: |
          Dockerfile
          config.yml
          target/
    outputs:
      version: ${{ steps.version.outputs.tags }}
  Release:
    if: ${{ endsWith(github.ref, 'master') }}
    needs: CI
    name: Release
    runs-on: ubuntu-latest
    steps:
    - name: Load artifact
      uses: actions/download-artifact@v2
      with: 
        name: build
    - name: Build Docker image and push it to GitHub Packages
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ github.token }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/prometheus-jdbc-exporter
        tags: ${{ needs.CI.outputs.version }},latest
    - name: Create Release
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.CI.outputs.version }}
        release_name: Release ${{ needs.CI.outputs.version }}
        draft: false
        prerelease: false
        body: ""
